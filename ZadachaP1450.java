/*
http://informatics.mccme.ru/mod/statements/view3.php?id=248&chapterid=1450
Задача №1450. Идеальный отряд

Как вы помните, месклениты отправились в экспедицию. 
Однажды руководителю экспедиции потребовалось отправить 
на разведку специальный отряд, состоящих из лучших мескленитов. 
Для этого он выстроил всю команду в шеренгу. Цвет панциря каждого 
мескленита обозначается заглавной латинской буквой (от "A" до "Z" ). 
В целях экономии времени руководитель собирается выбрать из шеренги 
несколько подряд стоящих. Кроме того, он считает, что разведка 
будет более удачной, если выбранный отряд будет симметричен по 
цветам панцирей. Например, отряд "RGBGR" будет симметричным, 
а отряд "RGRB"  – нет. Требуется выбрать из шеренги мескленитов
максимально возможный отряд, удволетворяющий данным условиям.

Входные данные
Дана строка, длина которой не превосходит 255 символов – цвета мескленитов в шеренге.

Выходные данные
Выходные данные представляют собой строку – выбраный отряд мескленитов. Если возможных вариантов ответа несколько, то требуется вывести находящийся ближе к началу шеренги.

Примеры
входные данные
ABAC
выходные данные
ABA
входные данные
ABBCB
выходные данные
BCB

*/
public class ZadachaP1450 {

    public static void main(String[] args) {
        String str = new java.util.Scanner(System.in).nextLine();
        int k = 0, n = str.length();
        String[] t = new String[n * n];
        for (int i = 1; i <= n; i++) {
            for (int j = 0; j <= n - i; j++) {
                if (isSim(str.substring(j, j + i))) {
                    t[k++] = str.substring(j, j + i);
                }
            }
        }
        int max = 0;
        String squad = null;
        for (int i = 0; i < k; i++) {
            int z = t[i].length();
            if (z > max) {
                max = z;
                squad = t[i];
            }
        }
        System.out.println(squad);
    }

    public static boolean isSim(String str) {
        int k = 0, n = str.length();
        for (int i = 0; i < n / 2; i++) {
            if (str.charAt(i) == str.charAt(n - 1 - i)) {
                k++;
            }

        }

        return k == n / 2;
    }
}
